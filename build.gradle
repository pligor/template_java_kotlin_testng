buildscript {
    ext.kotlin_version = '1.4.20'
}

plugins { // https://plugins.gradle.org/
//    id 'maven' // default from swagger codegen but not sure if this helps with anything
    id 'java'
    id 'idea'
    //id 'eclipse'  //uncomment this if you are using eclipse
    id "org.jetbrains.kotlin.jvm" version "$kotlin_version" // https://kotlinlang.org/docs/reference/using-gradle.html
    //id 'io.qameta.allure' version "2.8.1" // https://github.com/allure-framework/allure-gradle
    id "org.jetbrains.kotlin.plugin.serialization" version "$kotlin_version" //https://plugins.gradle.org/plugin/org.jetbrains.kotlin.plugin.serialization
}

group = 'template.java.kotlin.automation.framework'
version = '1.0.0'

repositories {
    jcenter()
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

task execute(type:JavaExec) {
   main = System.getProperty('mainClass')
   classpath = sourceSets.main.runtimeClasspath
}

dependencies {
    //swagger codegen automatic
    compile 'io.swagger.core.v3:swagger-annotations:2.0.0'
    compile 'com.squareup.okhttp:okhttp:2.7.5'
    compile 'com.squareup.okhttp:logging-interceptor:2.7.5'
    compile 'com.google.code.gson:gson:2.8.1'
    compile 'io.gsonfire:gson-fire:1.8.3'
    compile 'org.threeten:threetenbp:1.3.5'
    testCompile 'junit:junit:4.12'
    compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'

    // https://mvnrepository.com/artifact/io.rest-assured/rest-assured
    compile group: 'io.rest-assured', name: 'rest-assured', version: '4.3.2'
    compile group: 'io.rest-assured', name: 'json-schema-validator', version: '4.3.2'

    //Kotlin
    // https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-script-runtime
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-script-runtime', version: "$kotlin_version"
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-serialization', version: "$kotlin_version"
    // https://mvnrepository.com/artifact/org.jetbrains.kotlinx/kotlinx-serialization-json
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-serialization-json', version: '1.0.1'

    // Selenide (Selenium) dependencies
//    compile group: 'com.codeborne', name: 'selenide', version: '5.16.0'

    // https://mvnrepository.com/artifact/org.testng/testng
    compile group: 'org.testng', name: 'testng', version: '7.3.0'
    // TestNG reporting
    testCompile group: 'org.uncommons', name: 'reportng', version: '1.1.4'
}

test {
    useTestNG() {
        // Jenkins variable for running environment
        systemProperty "environmentName", findProperty("environmentName")
        // TestNG reporting path
        outputDirectory = file("$project.buildDir//testngOutput")

        // Keep this enabled
        useDefaultListeners = true

        // Run test suite
//        suites 'src/test/resources/testSuites/RegressionScope.xml', 'src/test/resources/testSuites/SmokeScope.xml'
        suites 'src/test/resources/testNGsuites/AllExceptUselessTests.xml'
    }
    // To disable default HTML reports uncomment next line
    reports.html.enabled = false

    options {
        listeners << 'org.uncommons.reportng.JUnitXMLReporter'
        //listeners << 'org.uncommons.reportng.HTMLReporter' //do not really need this
    }

    testLogging {
        //https://mrhaki.blogspot.com/2014/10/gradle-goodness-show-standard-out-or.html
        // this is only for system println to show in console which it doesn't by default
        showStandardStreams = System.getProperty('debug', "false") == "true"  //-Ddebug=true

        exceptionFormat 'full'
    }

    /*allure {
        autoconfigure = true
        version = '2.8.1' //should be exactly same as the version of the allure plugin at the top

        useTestNG {
            version = '2.13.6' //this is dependent from this one: https://mvnrepository.com/artifact/io.qameta.allure/allure-testng/2.13.6
        }
    }*/
}
